language: objective-c
osx_image: xcode10.2
branches:
  only:
    - master
    - develop
    - /^v\d+\.\d+(\.\d+)?(-\S*)?$/
cache:
  directories:
    - $HOME/Library/Caches/org.carthage.CarthageKit/dependencies
    - Carthage
    - vendor/bundle

before_install:
  - bundle install --path vendor
  - gem install xcpretty
  - brew update
  - brew outdated carthage || brew upgrade carthage

env:
  global:
    - LC_CTYPE=en_US.UTF-8
    - LANG=en_US.UTF-8
    - WORKSPACE=LeakDetector.xcworkspace
    - IOS_FRAMEWORK_SCHEME="LeakDetector-iOS"
    - OSX_FRAMEWORK_SCHEME="LeakDetector-macOS"
    - TVOS_FRAMEWORK_SCHEME="LeakDetector-tvOS"
    - WATCHOS_FRAMEWORK_SCHEME="LeakDetector-watchOS"
  matrix:
    - DESTINATION="OS=12.2,name=iPhone XS"                  SCHEME="$IOS_FRAMEWORK_SCHEME"     RUN_TESTS="YES"
    - DESTINATION="OS=11.4,name=iPhone X"                   SCHEME="$IOS_FRAMEWORK_SCHEME"     RUN_TESTS="YES"
    - DESTINATION="OS=10.3.1,name=iPhone 7 Plus"            SCHEME="$IOS_FRAMEWORK_SCHEME"     RUN_TESTS="YES"
    - DESTINATION="OS=9.0,name=iPhone 6"                    SCHEME="$IOS_FRAMEWORK_SCHEME"     RUN_TESTS="YES"
    - DESTINATION="arch=x86_64"                             SCHEME="$OSX_FRAMEWORK_SCHEME"     RUN_TESTS="YES"
    - DESTINATION="OS=12.2,name=Apple TV 4K (at 1080p)"     SCHEME="$TVOS_FRAMEWORK_SCHEME"    RUN_TESTS="YES"
    - DESTINATION="OS=11.4,name=Apple TV 4K (at 1080p)"     SCHEME="$TVOS_FRAMEWORK_SCHEME"    RUN_TESTS="YES"
    - DESTINATION="OS=10.2,name=Apple TV 1080p"             SCHEME="$TVOS_FRAMEWORK_SCHEME"    RUN_TESTS="YES"
    - DESTINATION="OS=9.0,name=Apple TV 1080p"              SCHEME="$TVOS_FRAMEWORK_SCHEME"    RUN_TESTS="YES"
    - DESTINATION="OS=5.2,name=Apple Watch Series 4 - 44mm" SCHEME="$WATCHOS_FRAMEWORK_SCHEME" RUN_TESTS="NO"
    - DESTINATION="OS=4.2,name=Apple Watch Series 3 - 42mm" SCHEME="$WATCHOS_FRAMEWORK_SCHEME" RUN_TESTS="NO"
    - DESTINATION="OS=3.1,name=Apple Watch Series 2 - 42mm" SCHEME="$WATCHOS_FRAMEWORK_SCHEME" RUN_TESTS="NO"
    - DESTINATION="OS=2.0,name=Apple Watch - 38mm"          SCHEME="$WATCHOS_FRAMEWORK_SCHEME" RUN_TESTS="NO"

before_script:
  - sh scripts/bootstrap

script:
  - set -o pipefail
  - xcodebuild -version
  - xcodebuild -showsdks

  # Build Framework in Debug and Run Tests if specified
  - if [ $RUN_TESTS == "YES" ]; then
    xcodebuild -workspace "$WORKSPACE" -scheme "$SCHEME" -destination "$DESTINATION" -configuration Debug ONLY_ACTIVE_ARCH=NO ENABLE_TESTABILITY=YES test | xcpretty -c;
    else
    xcodebuild -workspace "$WORKSPACE" -scheme "$SCHEME" -destination "$DESTINATION" -configuration Debug ONLY_ACTIVE_ARCH=NO build | xcpretty -c;
    fi

  # Build Framework in Release and Run Tests if specified
  - if [ $RUN_TESTS == "YES" ]; then
    xcodebuild -workspace "$WORKSPACE" -scheme "$SCHEME" -destination "$DESTINATION" -configuration Release ONLY_ACTIVE_ARCH=NO ENABLE_TESTABILITY=YES test | xcpretty -c;
    else
    xcodebuild -workspace "$WORKSPACE" -scheme "$SCHEME" -destination "$DESTINATION" -configuration Release ONLY_ACTIVE_ARCH=NO build | xcpretty -c;
    fi

jobs:
  include:
    - stage: Danger
      script: bundle exec danger
    - stage: Pod lib lint
      script: bundle exec pod lib lint --verbose --allow-warnings
    - stage: Deploy Github
      script: skip
      before_deploy:
        - carthage build --no-skip-current --cache-builds
        - carthage archive LeakDetector
      deploy:
        - provider: releases
          api_key:
            secure: # https://docs.travis-ci.com/user/deployment/releases/
          file:
            - LeakDetector.framework.zip
          skip_cleanup: true
          overwrite: true
          on:
            repo: duyquang91/LeakDetector
            tags: true
    - stage: Deploy Cocoapods
      script: skip
      deploy:
        - provider: script # https://fuller.li/posts/automated-cocoapods-releases-with-ci/
          script: bundle exec pod trunk push
          skip_cleanup: true
          on:
            tags: true
